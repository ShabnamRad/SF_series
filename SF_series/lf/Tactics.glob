DIGEST 4e45efee4cb8902018057f84064de431
FLF.Tactics
R666:669 LF.Poly <> <> lib
prf 945:950 <> silly1
R972:974 Coq.Init.Datatypes <> nat ind
R988:997 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1011:1019 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1025:1027 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1020:1020 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1022:1022 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1024:1024 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1021:1021 LF.Tactics <> n var
R1023:1023 LF.Tactics <> o var
R1028:1028 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1030:1030 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1032:1032 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1029:1029 LF.Tactics <> m var
R1031:1031 LF.Tactics <> p var
R1003:1005 Coq.Init.Logic <> ::type_scope:x_'='_x not
R998:998 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1000:1000 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1002:1002 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R999:999 LF.Tactics <> n var
R1001:1001 LF.Tactics <> o var
R1006:1006 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1008:1008 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1010:1010 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1007:1007 LF.Tactics <> n var
R1009:1009 LF.Tactics <> p var
R984:986 Coq.Init.Logic <> ::type_scope:x_'='_x not
R983:983 LF.Tactics <> n var
R987:987 LF.Tactics <> m var
prf 1556:1561 <> silly2
R1583:1585 Coq.Init.Datatypes <> nat ind
R1599:1608 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1609:1609 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1652:1661 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1667:1669 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1662:1662 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1664:1664 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1666:1666 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1663:1663 LF.Tactics <> n var
R1665:1665 LF.Tactics <> o var
R1670:1670 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1672:1672 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1674:1674 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1671:1671 LF.Tactics <> m var
R1673:1673 LF.Tactics <> p var
R1624:1626 Coq.Init.Datatypes <> nat ind
R1635:1638 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1644:1646 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1639:1639 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1641:1641 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1643:1643 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1640:1640 LF.Tactics <> q var
R1642:1642 LF.Tactics <> o var
R1647:1647 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1649:1649 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1651:1651 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1648:1648 LF.Tactics <> r var
R1650:1650 LF.Tactics <> p var
R1631:1633 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1630:1630 LF.Tactics <> q var
R1634:1634 LF.Tactics <> r var
R1595:1597 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1594:1594 LF.Tactics <> n var
R1598:1598 LF.Tactics <> m var
prf 2185:2191 <> silly2a
R2209:2211 Coq.Init.Datatypes <> nat ind
R2233:2242 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2243:2243 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2290:2299 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2303:2305 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2300:2300 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2302:2302 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2301:2301 LF.Tactics <> n var
R2306:2306 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2308:2308 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2307:2307 LF.Tactics <> m var
R2258:2260 Coq.Init.Datatypes <> nat ind
R2277:2280 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2284:2286 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2281:2281 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2283:2283 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2282:2282 LF.Tactics <> q var
R2287:2287 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2289:2289 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2288:2288 LF.Tactics <> r var
R2269:2271 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2264:2264 LF.Poly <> :::'('_x_','_x_')' not
R2266:2266 LF.Poly <> :::'('_x_','_x_')' not
R2268:2268 LF.Poly <> :::'('_x_','_x_')' not
R2265:2265 LF.Tactics <> q var
R2267:2267 LF.Tactics <> q var
R2272:2272 LF.Poly <> :::'('_x_','_x_')' not
R2274:2274 LF.Poly <> :::'('_x_','_x_')' not
R2276:2276 LF.Poly <> :::'('_x_','_x_')' not
R2273:2273 LF.Tactics <> r var
R2275:2275 LF.Tactics <> r var
R2225:2227 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2220:2220 LF.Poly <> :::'('_x_','_x_')' not
R2222:2222 LF.Poly <> :::'('_x_','_x_')' not
R2224:2224 LF.Poly <> :::'('_x_','_x_')' not
R2221:2221 LF.Tactics <> n var
R2223:2223 LF.Tactics <> n var
R2228:2228 LF.Poly <> :::'('_x_','_x_')' not
R2230:2230 LF.Poly <> :::'('_x_','_x_')' not
R2232:2232 LF.Poly <> :::'('_x_','_x_')' not
R2229:2229 LF.Tactics <> m var
R2231:2231 LF.Tactics <> m var
prf 2500:2507 <> silly_ex
R2516:2516 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2562:2571 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2585:2593 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2601:2603 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2594:2598 LF.Basics <> evenb def
R2604:2607 LF.Basics <> true constr
R2578:2580 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2572:2575 LF.Basics <> oddb def
R2581:2584 LF.Basics <> true constr
R2541:2544 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2555:2557 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2545:2548 LF.Basics <> oddb def
R2551:2551 Coq.Init.Datatypes <> S constr
R2553:2553 LF.Tactics <> n var
R2558:2561 LF.Basics <> true constr
R2534:2536 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2527:2531 LF.Basics <> evenb def
R2533:2533 LF.Tactics <> n var
R2537:2540 LF.Basics <> true constr
prf 2881:2895 <> silly3_firsttry
R2911:2913 Coq.Init.Datatypes <> nat ind
R2937:2946 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2961:2963 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2947:2947 LF.Basics <> ::nat_scope:x_'=?'_x not
R2955:2959 LF.Basics <> ::nat_scope:x_'=?'_x not
R2948:2948 Coq.Init.Datatypes <> S constr
R2951:2951 Coq.Init.Datatypes <> S constr
R2953:2953 LF.Tactics <> n var
R2964:2967 LF.Basics <> true constr
R2926:2929 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2936:2936 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2922:2925 LF.Basics <> true constr
R2931:2934 LF.Basics <> ::nat_scope:x_'=?'_x not
R2930:2930 LF.Tactics <> n var
R3517:3519 LF.Poly <> rev def
prf 3531:3543 <> rev_exercise1
R3562:3565 LF.Poly <> list ind
R3567:3569 Coq.Init.Datatypes <> nat ind
R3588:3596 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3599:3601 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3597:3598 LF.Tactics <> l' var
R3602:3604 LF.Poly <> rev def
R3606:3606 LF.Tactics <> l var
R3579:3581 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3578:3578 LF.Tactics <> l var
R3582:3584 LF.Poly <> rev def
R3586:3587 LF.Tactics <> l' var
R3656:3669 LF.Poly <> rev_involutive thm
R3656:3669 LF.Poly <> rev_involutive thm
def 4146:4161 <> trans_eq_example
R4187:4189 Coq.Init.Datatypes <> nat ind
R4211:4219 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4233:4241 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4247:4249 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4242:4242 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4244:4244 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4246:4246 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4243:4243 LF.Tactics <> a var
R4245:4245 LF.Tactics <> b var
R4250:4250 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4252:4252 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4254:4254 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4251:4251 LF.Tactics <> e var
R4253:4253 LF.Tactics <> f var
R4225:4227 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4220:4220 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4222:4222 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4224:4224 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4221:4221 LF.Tactics <> c var
R4223:4223 LF.Tactics <> d var
R4228:4228 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4230:4230 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4232:4232 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4229:4229 LF.Tactics <> e var
R4231:4231 LF.Tactics <> f var
R4203:4205 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4198:4198 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4200:4200 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4202:4202 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4199:4199 LF.Tactics <> a var
R4201:4201 LF.Tactics <> b var
R4206:4206 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4208:4208 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4210:4210 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4207:4207 LF.Tactics <> c var
R4209:4209 LF.Tactics <> d var
prf 4511:4518 <> trans_eq
R4547:4547 LF.Tactics <> X var
R4558:4561 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4567:4570 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4572:4574 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4571:4571 LF.Tactics <> n var
R4575:4575 LF.Tactics <> o var
R4563:4565 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4562:4562 LF.Tactics <> m var
R4566:4566 LF.Tactics <> o var
R4554:4556 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4553:4553 LF.Tactics <> n var
R4557:4557 LF.Tactics <> m var
def 4830:4846 <> trans_eq_example'
R4872:4874 Coq.Init.Datatypes <> nat ind
R4896:4904 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4918:4926 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4932:4934 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4927:4927 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4929:4929 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4931:4931 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4928:4928 LF.Tactics <> a var
R4930:4930 LF.Tactics <> b var
R4935:4935 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4937:4937 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4939:4939 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4936:4936 LF.Tactics <> e var
R4938:4938 LF.Tactics <> f var
R4910:4912 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4905:4905 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4907:4907 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4909:4909 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4906:4906 LF.Tactics <> c var
R4908:4908 LF.Tactics <> d var
R4913:4913 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4915:4915 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4917:4917 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4914:4914 LF.Tactics <> e var
R4916:4916 LF.Tactics <> f var
R4888:4890 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4883:4883 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4885:4885 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4887:4887 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4884:4884 LF.Tactics <> a var
R4886:4886 LF.Tactics <> b var
R4891:4891 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4893:4893 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4895:4895 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4892:4892 LF.Tactics <> c var
R4894:4894 LF.Tactics <> d var
R5410:5410 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5412:5412 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5414:5414 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5392:5399 LF.Tactics <> trans_eq thm
R5410:5410 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5412:5412 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5414:5414 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5392:5399 LF.Tactics <> trans_eq thm
def 5756:5772 <> trans_eq_exercise
R5794:5796 Coq.Init.Datatypes <> nat ind
R5821:5829 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5841:5849 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5850:5850 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5856:5860 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5871:5871 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5852:5854 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R5851:5851 LF.Tactics <> n var
R5855:5855 LF.Tactics <> p var
R5861:5868 LF.Basics <> minustwo def
R5870:5870 LF.Tactics <> o var
R5830:5830 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5836:5839 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5832:5834 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R5831:5831 LF.Tactics <> n var
R5835:5835 LF.Tactics <> p var
R5840:5840 LF.Tactics <> m var
R5806:5809 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5820:5820 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5805:5805 LF.Tactics <> m var
R5810:5817 LF.Basics <> minustwo def
R5819:5819 LF.Tactics <> o var
R5897:5904 LF.Tactics <> trans_eq thm
R5897:5904 LF.Tactics <> trans_eq thm
prf 7361:7371 <> S_injective
R7389:7391 Coq.Init.Datatypes <> nat ind
R7406:7411 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7413:7415 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7412:7412 LF.Tactics <> n var
R7416:7416 LF.Tactics <> m var
R7400:7402 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7397:7397 Coq.Init.Datatypes <> S constr
R7399:7399 LF.Tactics <> n var
R7403:7403 Coq.Init.Datatypes <> S constr
R7405:7405 LF.Tactics <> m var
R7458:7460 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7461:7464 Coq.Init.Peano <> pred syndef
R7467:7467 Coq.Init.Datatypes <> S constr
R7458:7460 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7461:7464 Coq.Init.Peano <> pred syndef
R7467:7467 Coq.Init.Datatypes <> S constr
prf 7969:7980 <> S_injective'
R7998:8000 Coq.Init.Datatypes <> nat ind
R8015:8020 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8022:8024 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8021:8021 LF.Tactics <> n var
R8025:8025 LF.Tactics <> m var
R8009:8011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8006:8006 Coq.Init.Datatypes <> S constr
R8008:8008 LF.Tactics <> n var
R8012:8012 Coq.Init.Datatypes <> S constr
R8014:8014 LF.Tactics <> m var
prf 8494:8506 <> injection_ex1
R8526:8528 Coq.Init.Datatypes <> nat ind
R8549:8554 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8558:8560 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8555:8555 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8557:8557 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8556:8556 LF.Tactics <> n var
R8561:8561 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8563:8563 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8562:8562 LF.Tactics <> m var
R8540:8542 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8534:8534 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8536:8537 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8539:8539 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8535:8535 LF.Tactics <> n var
R8538:8538 LF.Tactics <> m var
R8543:8543 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8545:8546 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8548:8548 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8544:8544 LF.Tactics <> o var
R8547:8547 LF.Tactics <> o var
prf 8806:8818 <> injection_ex2
R8836:8838 Coq.Init.Datatypes <> nat ind
R8853:8858 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8860:8862 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8859:8859 LF.Tactics <> n var
R8863:8863 LF.Tactics <> m var
R8847:8849 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8844:8844 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8846:8846 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8845:8845 LF.Tactics <> n var
R8850:8850 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8852:8852 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8851:8851 LF.Tactics <> m var
def 9009:9021 <> injection_ex3
R9052:9052 LF.Tactics <> X var
R9062:9065 LF.Poly <> list ind
R9067:9067 LF.Tactics <> X var
R9093:9098 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9114:9119 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9121:9123 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9120:9120 LF.Tactics <> x var
R9124:9124 LF.Tactics <> y var
R9105:9107 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9100:9103 LF.Poly <> :::x_'::'_x not
R9099:9099 LF.Tactics <> y var
R9104:9104 LF.Tactics <> l var
R9109:9112 LF.Poly <> :::x_'::'_x not
R9108:9108 LF.Tactics <> x var
R9113:9113 LF.Tactics <> j var
R9084:9086 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9074:9077 LF.Poly <> :::x_'::'_x not
R9073:9073 LF.Tactics <> x var
R9079:9082 LF.Poly <> :::x_'::'_x not
R9078:9078 LF.Tactics <> y var
R9083:9083 LF.Tactics <> l var
R9088:9091 LF.Poly <> :::x_'::'_x not
R9087:9087 LF.Tactics <> z var
R9092:9092 LF.Tactics <> j var
prf 9902:9908 <> eqb_0_l
R9938:9941 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9943:9945 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9942:9942 LF.Tactics <> n var
R9931:9933 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9926:9929 LF.Basics <> ::nat_scope:x_'=?'_x not
R9930:9930 LF.Tactics <> n var
R9934:9937 LF.Basics <> true constr
prf 10738:10753 <> discriminate_ex1
R10769:10771 Coq.Init.Datatypes <> nat ind
R10784:10789 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10795:10797 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10791:10793 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R10780:10782 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10777:10777 Coq.Init.Datatypes <> S constr
R10779:10779 LF.Tactics <> n var
R10783:10783 Coq.Init.Datatypes <> O constr
prf 10862:10877 <> discriminate_ex2
R10895:10897 Coq.Init.Datatypes <> nat ind
R10915:10920 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10924:10926 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10921:10921 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10923:10923 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10922:10922 LF.Tactics <> n var
R10927:10927 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10929:10929 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10928:10928 LF.Tactics <> m var
R10908:10910 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10903:10907 LF.Basics <> false constr
R10911:10914 LF.Basics <> true constr
def 11450:11465 <> discriminate_ex3
R11498:11498 LF.Tactics <> X var
R11508:11511 LF.Poly <> list ind
R11513:11513 LF.Tactics <> X var
R11537:11544 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11546:11548 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11545:11545 LF.Tactics <> x var
R11549:11549 LF.Tactics <> z var
R11532:11534 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11522:11525 LF.Poly <> :::x_'::'_x not
R11521:11521 LF.Tactics <> x var
R11527:11530 LF.Poly <> :::x_'::'_x not
R11526:11526 LF.Tactics <> y var
R11531:11531 LF.Tactics <> l var
R11535:11536 LF.Poly <> :::'['_']' not
prf 11896:11902 <> f_equal
R11931:11934 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11935:11935 LF.Tactics <> B var
R11930:11930 LF.Tactics <> A var
R11944:11944 LF.Tactics <> A var
R11955:11958 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11962:11964 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11959:11959 LF.Tactics <> f var
R11961:11961 LF.Tactics <> x var
R11965:11965 LF.Tactics <> f var
R11967:11967 LF.Tactics <> y var
R11951:11953 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11950:11950 LF.Tactics <> x var
R11954:11954 LF.Tactics <> y var
prf 12470:12474 <> S_inj
R12492:12494 Coq.Init.Datatypes <> nat ind
R12502:12505 LF.Basics <> bool ind
R12532:12541 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12548:12550 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12543:12546 LF.Basics <> ::nat_scope:x_'=?'_x not
R12542:12542 LF.Tactics <> n var
R12547:12547 LF.Tactics <> m var
R12551:12551 LF.Tactics <> b var
R12528:12530 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12514:12514 LF.Basics <> ::nat_scope:x_'=?'_x not
R12518:12523 LF.Basics <> ::nat_scope:x_'=?'_x not
R12527:12527 LF.Basics <> ::nat_scope:x_'=?'_x not
R12515:12515 Coq.Init.Datatypes <> S constr
R12517:12517 LF.Tactics <> n var
R12524:12524 Coq.Init.Datatypes <> S constr
R12526:12526 LF.Tactics <> m var
R12531:12531 LF.Tactics <> b var
prf 13377:13383 <> silly3'
R13399:13401 Coq.Init.Datatypes <> nat ind
R13407:13407 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13446:13452 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13468:13474 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13479:13482 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13497:13497 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13475:13478 LF.Basics <> true constr
R13483:13483 LF.Basics <> ::nat_scope:x_'=?'_x not
R13491:13495 LF.Basics <> ::nat_scope:x_'=?'_x not
R13484:13484 Coq.Init.Datatypes <> S constr
R13487:13487 Coq.Init.Datatypes <> S constr
R13489:13489 LF.Tactics <> n var
R13457:13460 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13467:13467 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13453:13456 LF.Basics <> true constr
R13462:13465 LF.Basics <> ::nat_scope:x_'=?'_x not
R13461:13461 LF.Tactics <> n var
R13421:13424 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13439:13441 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13425:13425 LF.Basics <> ::nat_scope:x_'=?'_x not
R13433:13437 LF.Basics <> ::nat_scope:x_'=?'_x not
R13426:13426 Coq.Init.Datatypes <> S constr
R13429:13429 Coq.Init.Datatypes <> S constr
R13431:13431 LF.Tactics <> n var
R13442:13445 LF.Basics <> true constr
R13414:13416 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13409:13412 LF.Basics <> ::nat_scope:x_'=?'_x not
R13408:13408 LF.Tactics <> n var
R13417:13420 LF.Basics <> true constr
prf 14382:14399 <> plus_n_n_injective
R14433:14441 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14443:14445 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14442:14442 LF.Tactics <> n var
R14446:14446 LF.Tactics <> m var
R14425:14427 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14421:14423 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R14420:14420 LF.Tactics <> n var
R14424:14424 LF.Tactics <> n var
R14429:14431 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R14428:14428 LF.Tactics <> m var
R14432:14432 LF.Tactics <> m var
R14649:14657 LF.Induction <> plus_n_Sm thm
R14649:14657 LF.Induction <> plus_n_Sm thm
R14649:14657 LF.Induction <> plus_n_Sm thm
R14676:14684 LF.Induction <> plus_n_Sm thm
R14676:14684 LF.Induction <> plus_n_Sm thm
R14676:14684 LF.Induction <> plus_n_Sm thm
prf 15664:15686 <> double_injective_FAILED
R15726:15734 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15736:15738 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15735:15735 LF.Tactics <> n var
R15739:15739 LF.Tactics <> m var
R15715:15717 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15707:15712 LF.Induction <> double def
R15714:15714 LF.Tactics <> n var
R15718:15723 LF.Induction <> double def
R15725:15725 LF.Tactics <> m var
R16037:16043 LF.Tactics <> f_equal thm
R16037:16043 LF.Tactics <> f_equal thm
prf 18280:18295 <> double_injective
R18335:18343 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18345:18347 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18344:18344 LF.Tactics <> n var
R18348:18348 LF.Tactics <> m var
R18324:18326 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18316:18321 LF.Induction <> double def
R18323:18323 LF.Tactics <> n var
R18327:18332 LF.Induction <> double def
R18334:18334 LF.Tactics <> m var
R19239:19245 LF.Tactics <> f_equal thm
R19239:19245 LF.Tactics <> f_equal thm
prf 20180:20187 <> eqb_true
R20220:20223 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20225:20227 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20224:20224 LF.Tactics <> n var
R20228:20228 LF.Tactics <> m var
R20213:20215 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20208:20211 LF.Basics <> ::nat_scope:x_'=?'_x not
R20207:20207 LF.Tactics <> n var
R20212:20212 LF.Tactics <> m var
R20216:20219 LF.Basics <> true constr
R20424:20430 LF.Tactics <> f_equal thm
R20424:20430 LF.Tactics <> f_equal thm
def 20722:20752 <> manual_grade_for_informal_proof
R20756:20761 Coq.Init.Datatypes <> option ind
R20767:20767 LF.Poly <> ::type_scope:x_'*'_x not
R20764:20766 Coq.Init.Datatypes <> nat ind
R20768:20773 Coq.Strings.String <> string ind
R20779:20782 Coq.Init.Datatypes <> None constr
prf 21114:21142 <> double_injective_take2_FAILED
R21182:21190 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21192:21194 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21191:21191 LF.Tactics <> n var
R21195:21195 LF.Tactics <> m var
R21171:21173 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21163:21168 LF.Induction <> double def
R21170:21170 LF.Tactics <> n var
R21174:21179 LF.Induction <> double def
R21181:21181 LF.Tactics <> m var
R21493:21499 LF.Tactics <> f_equal thm
R21493:21499 LF.Tactics <> f_equal thm
prf 22435:22456 <> double_injective_take2
R22496:22504 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22506:22508 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22505:22505 LF.Tactics <> n var
R22509:22509 LF.Tactics <> m var
R22485:22487 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22477:22482 LF.Induction <> double def
R22484:22484 LF.Tactics <> n var
R22488:22493 LF.Induction <> double def
R22495:22495 LF.Tactics <> m var
R22990:22996 LF.Tactics <> f_equal thm
R22990:22996 LF.Tactics <> f_equal thm
prf 25201:25211 <> eqb_id_true
R25246:25249 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25251:25253 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25250:25250 LF.Tactics <> x var
R25254:25254 LF.Tactics <> y var
R25239:25241 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25229:25234 LF.Lists <> eqb_id def
R25238:25238 LF.Tactics <> y var
R25236:25236 LF.Tactics <> x var
R25242:25245 LF.Basics <> true constr
R25315:25317 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25315:25317 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25330:25337 LF.Tactics <> eqb_true thm
R25330:25337 LF.Tactics <> eqb_true thm
prf 25504:25513 <> length_nil
R25543:25546 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25548:25550 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25547:25547 LF.Tactics <> l var
R25551:25553 LF.Poly <> nil constr
R25539:25541 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25529:25534 LF.Poly <> length def
R25538:25538 LF.Tactics <> l var
R25536:25536 LF.Tactics <> X var
prf 25662:25671 <> nth_theory
R25709:25712 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25737:25739 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25714:25722 LF.Poly <> nth_error def
R25736:25736 LF.Tactics <> n var
R25728:25731 LF.Poly <> :::x_'::'_x not
R25727:25727 LF.Tactics <> x var
R25732:25733 LF.Tactics <> l' var
R25724:25724 LF.Tactics <> X var
R25741:25749 LF.Poly <> nth_error def
R25757:25760 Coq.Init.Peano <> pred syndef
R25762:25762 LF.Tactics <> n var
R25753:25754 LF.Tactics <> l' var
R25751:25751 LF.Tactics <> X var
R25693:25693 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25700:25703 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25695:25698 LF.Basics <> ::nat_scope:x_'=?'_x not
R25694:25694 LF.Tactics <> n var
R25704:25708 LF.Basics <> false constr
prf 25855:25874 <> nth_error_after_last
R25889:25891 Coq.Init.Datatypes <> nat ind
R25910:25913 LF.Poly <> list ind
R25915:25915 LF.Tactics <> X var
R25936:25944 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25958:25960 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25945:25953 LF.Poly <> nth_error def
R25957:25957 LF.Tactics <> n var
R25955:25955 LF.Tactics <> l var
R25961:25964 Coq.Init.Datatypes <> None constr
R25932:25934 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25924:25929 LF.Poly <> length def
R25931:25931 LF.Tactics <> l var
R25935:25935 LF.Tactics <> n var
R26123:26132 LF.Tactics <> length_nil thm
R26123:26132 LF.Tactics <> length_nil thm
R26186:26195 LF.Tactics <> nth_theory thm
R26186:26195 LF.Tactics <> nth_theory thm
R26186:26195 LF.Tactics <> nth_theory thm
R26186:26195 LF.Tactics <> nth_theory thm
def 26621:26626 <> square
R26634:26636 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R26633:26633 LF.Tactics <> n var
R26637:26637 LF.Tactics <> n var
prf 26708:26718 <> square_mult
R26748:26750 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26734:26739 LF.Tactics <> square def
R26743:26745 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R26742:26742 LF.Tactics <> n var
R26746:26746 LF.Tactics <> m var
R26759:26761 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R26751:26756 LF.Tactics <> square def
R26758:26758 LF.Tactics <> n var
R26762:26767 LF.Tactics <> square def
R26769:26769 LF.Tactics <> m var
R27095:27100 LF.Tactics <> square def
R27419:27428 LF.Induction <> mult_assoc thm
R27419:27428 LF.Induction <> mult_assoc thm
R27419:27428 LF.Induction <> mult_assoc thm
R27454:27456 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27450:27452 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27446:27448 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27462:27464 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27458:27460 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27454:27456 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27450:27452 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27446:27448 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27462:27464 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27458:27460 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27483:27491 LF.Induction <> mult_comm thm
R27483:27491 LF.Induction <> mult_comm thm
R27483:27491 LF.Induction <> mult_comm thm
R27500:27509 LF.Induction <> mult_assoc thm
R27500:27509 LF.Induction <> mult_assoc thm
R27535:27544 LF.Induction <> mult_assoc thm
R27535:27544 LF.Induction <> mult_assoc thm
R27535:27544 LF.Induction <> mult_assoc thm
def 27927:27929 <> foo
R27935:27937 Coq.Init.Datatypes <> nat ind
prf 28159:28170 <> silly_fact_1
R28193:28195 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28189:28191 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28184:28186 LF.Tactics <> foo def
R28188:28188 LF.Tactics <> m var
R28207:28209 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28196:28198 LF.Tactics <> foo def
R28202:28204 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28201:28201 LF.Tactics <> m var
def 28442:28444 <> bar
R28459:28459 LF.Tactics <> x var
R28470:28470 Coq.Init.Datatypes <> O constr
R28481:28481 Coq.Init.Datatypes <> S constr
prf 28555:28573 <> silly_fact_2_FAILED
R28596:28598 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28592:28594 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28587:28589 LF.Tactics <> bar def
R28591:28591 LF.Tactics <> m var
R28610:28612 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28599:28601 LF.Tactics <> bar def
R28605:28607 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28604:28604 LF.Tactics <> m var
prf 29599:29610 <> silly_fact_2
R29633:29635 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29629:29631 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29624:29626 LF.Tactics <> bar def
R29628:29628 LF.Tactics <> m var
R29647:29649 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29636:29638 LF.Tactics <> bar def
R29642:29644 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29641:29641 LF.Tactics <> m var
prf 30006:30018 <> silly_fact_2'
R30041:30043 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30037:30039 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R30032:30034 LF.Tactics <> bar def
R30036:30036 LF.Tactics <> m var
R30055:30057 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R30044:30046 LF.Tactics <> bar def
R30050:30052 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R30049:30049 LF.Tactics <> m var
R30089:30091 LF.Tactics <> bar def
def 30741:30748 <> sillyfun
R30755:30757 Coq.Init.Datatypes <> nat ind
R30762:30765 LF.Basics <> bool ind
R30776:30779 LF.Basics <> ::nat_scope:x_'=?'_x not
R30775:30775 LF.Tactics <> n var
R30804:30807 LF.Basics <> ::nat_scope:x_'=?'_x not
R30803:30803 LF.Tactics <> n var
R30828:30832 LF.Basics <> false constr
R30815:30819 LF.Basics <> false constr
R30787:30791 LF.Basics <> false constr
prf 30844:30857 <> sillyfun_false
R30873:30875 Coq.Init.Datatypes <> nat ind
R30891:30893 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30881:30888 LF.Tactics <> sillyfun def
R30890:30890 LF.Tactics <> n var
R30894:30898 LF.Basics <> false constr
R30927:30934 LF.Tactics <> sillyfun def
R30950:30953 LF.Basics <> ::nat_scope:x_'=?'_x not
R30950:30953 LF.Basics <> ::nat_scope:x_'=?'_x not
R31042:31045 LF.Basics <> ::nat_scope:x_'=?'_x not
R31042:31045 LF.Basics <> ::nat_scope:x_'=?'_x not
def 31930:31934 <> split
R31954:31957 LF.Poly <> list ind
R31961:31961 LF.Poly <> ::type_scope:x_'*'_x not
R31960:31960 LF.Tactics <> X var
R31962:31962 LF.Tactics <> Y var
R31983:31983 LF.Poly <> ::type_scope:x_'*'_x not
R31990:31994 LF.Poly <> ::type_scope:x_'*'_x not
R32001:32001 LF.Poly <> ::type_scope:x_'*'_x not
R31984:31987 LF.Poly <> list ind
R31989:31989 LF.Tactics <> X var
R31995:31998 LF.Poly <> list ind
R32000:32000 LF.Tactics <> Y var
R32014:32014 LF.Tactics <> l var
R32025:32026 LF.Poly <> :::'['_']' not
R32031:32031 LF.Poly <> :::'('_x_','_x_')' not
R32034:32035 LF.Poly <> :::'('_x_','_x_')' not
R32038:32038 LF.Poly <> :::'('_x_','_x_')' not
R32032:32033 LF.Poly <> :::'['_']' not
R32036:32037 LF.Poly <> :::'['_']' not
R32050:32053 LF.Poly <> :::x_'::'_x not
R32044:32044 LF.Poly <> :::'('_x_','_x_')' not
R32046:32047 LF.Poly <> :::'('_x_','_x_')' not
R32049:32049 LF.Poly <> :::'('_x_','_x_')' not
R32071:32075 LF.Tactics <> split def
R32092:32092 LF.Poly <> :::'('_x_','_x_')' not
R32095:32096 LF.Poly <> :::'('_x_','_x_')' not
R32099:32099 LF.Poly <> :::'('_x_','_x_')' not
R32104:32104 LF.Poly <> :::'('_x_','_x_')' not
R32112:32113 LF.Poly <> :::'('_x_','_x_')' not
R32121:32121 LF.Poly <> :::'('_x_','_x_')' not
R32106:32109 LF.Poly <> :::x_'::'_x not
R32115:32118 LF.Poly <> :::x_'::'_x not
prf 32231:32243 <> combine_split
R32263:32266 LF.Poly <> list ind
R32270:32272 LF.Poly <> ::type_scope:x_'*'_x not
R32269:32269 LF.Tactics <> X var
R32273:32273 LF.Tactics <> Y var
R32304:32309 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32323:32325 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32310:32316 LF.Poly <> combine def
R32321:32322 LF.Tactics <> l2 var
R32318:32319 LF.Tactics <> l1 var
R32326:32326 LF.Tactics <> l var
R32293:32295 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32286:32290 LF.Tactics <> split def
R32292:32292 LF.Tactics <> l var
R32296:32296 LF.Poly <> :::'('_x_','_x_')' not
R32299:32300 LF.Poly <> :::'('_x_','_x_')' not
R32303:32303 LF.Poly <> :::'('_x_','_x_')' not
R32297:32298 LF.Tactics <> l1 var
R32301:32302 LF.Tactics <> l2 var
R32519:32523 LF.Tactics <> split def
R32519:32523 LF.Tactics <> split def
R32646:32646 LF.Tactics <> X var
R32657:32660 LF.Poly <> list ind
R32662:32662 LF.Tactics <> X var
R32673:32676 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32684:32686 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32678:32681 LF.Poly <> :::x_'::'_x not
R32677:32677 LF.Tactics <> h var
R32682:32683 LF.Tactics <> t1 var
R32688:32691 LF.Poly <> :::x_'::'_x not
R32687:32687 LF.Tactics <> h var
R32692:32693 LF.Tactics <> t2 var
R32668:32670 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32666:32667 LF.Tactics <> t1 var
R32671:32672 LF.Tactics <> t2 var
R32646:32646 LF.Tactics <> X var
R32657:32660 LF.Poly <> list ind
R32662:32662 LF.Tactics <> X var
R32673:32676 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32684:32686 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32678:32681 LF.Poly <> :::x_'::'_x not
R32677:32677 LF.Tactics <> h var
R32682:32683 LF.Tactics <> t1 var
R32688:32691 LF.Poly <> :::x_'::'_x not
R32687:32687 LF.Tactics <> h var
R32692:32693 LF.Tactics <> t2 var
R32668:32670 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32666:32667 LF.Tactics <> t1 var
R32671:32672 LF.Tactics <> t2 var
def 33283:33291 <> sillyfun1
R33298:33300 Coq.Init.Datatypes <> nat ind
R33305:33308 LF.Basics <> bool ind
R33319:33322 LF.Basics <> ::nat_scope:x_'=?'_x not
R33318:33318 LF.Tactics <> n var
R33346:33349 LF.Basics <> ::nat_scope:x_'=?'_x not
R33345:33345 LF.Tactics <> n var
R33369:33373 LF.Basics <> false constr
R33357:33360 LF.Basics <> true constr
R33330:33333 LF.Basics <> true constr
prf 33599:33618 <> sillyfun1_odd_FAILED
R33634:33636 Coq.Init.Datatypes <> nat ind
R33663:33671 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33678:33680 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33672:33675 LF.Basics <> oddb def
R33677:33677 LF.Tactics <> n var
R33681:33684 LF.Basics <> true constr
R33656:33658 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33645:33653 LF.Tactics <> sillyfun1 def
R33655:33655 LF.Tactics <> n var
R33659:33662 LF.Basics <> true constr
R33716:33724 LF.Tactics <> sillyfun1 def
R33746:33749 LF.Basics <> ::nat_scope:x_'=?'_x not
R33746:33749 LF.Basics <> ::nat_scope:x_'=?'_x not
prf 34549:34561 <> sillyfun1_odd
R34577:34579 Coq.Init.Datatypes <> nat ind
R34606:34614 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34621:34623 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34615:34618 LF.Basics <> oddb def
R34620:34620 LF.Tactics <> n var
R34624:34627 LF.Basics <> true constr
R34599:34601 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34588:34596 LF.Tactics <> sillyfun1 def
R34598:34598 LF.Tactics <> n var
R34602:34605 LF.Basics <> true constr
R34659:34667 LF.Tactics <> sillyfun1 def
R34689:34692 LF.Basics <> ::nat_scope:x_'=?'_x not
R34689:34692 LF.Basics <> ::nat_scope:x_'=?'_x not
R34938:34945 LF.Tactics <> eqb_true thm
R34938:34945 LF.Tactics <> eqb_true thm
R35236:35239 LF.Basics <> ::nat_scope:x_'=?'_x not
R35236:35239 LF.Basics <> ::nat_scope:x_'=?'_x not
R35296:35303 LF.Tactics <> eqb_true thm
R35296:35303 LF.Tactics <> eqb_true thm
prf 35480:35501 <> bool_fn_applied_thrice
R35523:35526 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35527:35530 LF.Basics <> bool ind
R35519:35522 LF.Basics <> bool ind
R35538:35541 LF.Basics <> bool ind
R35558:35560 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35547:35547 LF.Tactics <> f var
R35550:35550 LF.Tactics <> f var
R35553:35553 LF.Tactics <> f var
R35555:35555 LF.Tactics <> b var
R35561:35561 LF.Tactics <> f var
R35563:35563 LF.Tactics <> b var
R35621:35624 LF.Basics <> true constr
R35621:35624 LF.Basics <> true constr
R35690:35694 LF.Basics <> false constr
R35690:35694 LF.Basics <> false constr
R35768:35772 LF.Basics <> false constr
R35768:35772 LF.Basics <> false constr
R35805:35808 LF.Basics <> true constr
R35805:35808 LF.Basics <> true constr
prf 38337:38343 <> eqb_sym
R38361:38363 Coq.Init.Datatypes <> nat ind
R38369:38369 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38376:38380 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38387:38387 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38371:38374 LF.Basics <> ::nat_scope:x_'=?'_x not
R38370:38370 LF.Tactics <> n var
R38375:38375 LF.Tactics <> m var
R38382:38385 LF.Basics <> ::nat_scope:x_'=?'_x not
R38381:38381 LF.Tactics <> m var
R38386:38386 LF.Tactics <> n var
R38418:38421 LF.Basics <> ::nat_scope:x_'=?'_x not
R38418:38421 LF.Basics <> ::nat_scope:x_'=?'_x not
R38444:38451 LF.Tactics <> eqb_true thm
R38444:38451 LF.Tactics <> eqb_true thm
R38480:38487 LF.Induction <> eqb_refl thm
R38480:38487 LF.Induction <> eqb_refl thm
R38505:38508 LF.Basics <> ::nat_scope:x_'=?'_x not
R38505:38508 LF.Basics <> ::nat_scope:x_'=?'_x not
R38534:38541 LF.Tactics <> eqb_true thm
R38534:38541 LF.Tactics <> eqb_true thm
R38582:38589 LF.Induction <> eqb_refl thm
R38582:38589 LF.Induction <> eqb_refl thm
R38582:38589 LF.Induction <> eqb_refl thm
prf 38988:38996 <> eqb_trans
R39029:39034 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39048:39053 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39060:39062 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39055:39058 LF.Basics <> ::nat_scope:x_'=?'_x not
R39054:39054 LF.Tactics <> n var
R39059:39059 LF.Tactics <> p var
R39063:39066 LF.Basics <> true constr
R39041:39043 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39036:39039 LF.Basics <> ::nat_scope:x_'=?'_x not
R39035:39035 LF.Tactics <> m var
R39040:39040 LF.Tactics <> p var
R39044:39047 LF.Basics <> true constr
R39022:39024 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39017:39020 LF.Basics <> ::nat_scope:x_'=?'_x not
R39016:39016 LF.Tactics <> n var
R39021:39021 LF.Tactics <> m var
R39025:39028 LF.Basics <> true constr
R39092:39099 LF.Tactics <> eqb_true thm
R39092:39099 LF.Tactics <> eqb_true thm
R39113:39120 LF.Tactics <> eqb_true thm
R39113:39120 LF.Tactics <> eqb_true thm
R39159:39162 LF.Basics <> ::nat_scope:x_'=?'_x not
R39159:39162 LF.Basics <> ::nat_scope:x_'=?'_x not
R39221:39228 LF.Induction <> eqb_refl thm
R39221:39228 LF.Induction <> eqb_refl thm
R39221:39228 LF.Induction <> eqb_refl thm
def 39961:39983 <> split_combine_statement
R40021:40024 LF.Poly <> list ind
R40026:40026 LF.Tactics <> X var
R40034:40037 LF.Poly <> list ind
R40039:40039 LF.Tactics <> Y var
R40064:40067 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40089:40091 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40068:40072 LF.Tactics <> split def
R40075:40081 LF.Poly <> combine def
R40086:40087 LF.Tactics <> l2 var
R40083:40084 LF.Tactics <> l1 var
R40092:40092 LF.Poly <> :::'('_x_','_x_')' not
R40095:40096 LF.Poly <> :::'('_x_','_x_')' not
R40099:40099 LF.Poly <> :::'('_x_','_x_')' not
R40093:40094 LF.Tactics <> l1 var
R40097:40098 LF.Tactics <> l2 var
R40052:40054 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40043:40048 LF.Poly <> length def
R40050:40051 LF.Tactics <> l1 var
R40055:40060 LF.Poly <> length def
R40062:40063 LF.Tactics <> l2 var
prf 40111:40121 <> tail_length
R40147:40147 LF.Tactics <> X var
R40155:40158 LF.Poly <> list ind
R40160:40160 LF.Tactics <> X var
R40167:40167 LF.Tactics <> Y var
R40175:40178 LF.Poly <> list ind
R40180:40180 LF.Tactics <> Y var
R40221:40224 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40234:40236 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40225:40230 LF.Poly <> length def
R40232:40233 LF.Tactics <> l1 var
R40237:40242 LF.Poly <> length def
R40244:40245 LF.Tactics <> l2 var
R40202:40204 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40186:40191 LF.Poly <> length def
R40195:40198 LF.Poly <> :::x_'::'_x not
R40194:40194 LF.Tactics <> x var
R40199:40200 LF.Tactics <> l1 var
R40205:40210 LF.Poly <> length def
R40214:40217 LF.Poly <> :::x_'::'_x not
R40213:40213 LF.Tactics <> y var
R40218:40219 LF.Tactics <> l2 var
R40346:40355 LF.Tactics <> length_nil thm
R40346:40355 LF.Tactics <> length_nil thm
prf 40451:40463 <> split_combine
R40467:40489 LF.Tactics <> split_combine_statement def
R40508:40530 LF.Tactics <> split_combine_statement def
R40631:40640 LF.Tactics <> length_nil thm
R40631:40640 LF.Tactics <> length_nil thm
R40744:40748 LF.Tactics <> split def
R40791:40801 LF.Tactics <> tail_length thm
R40791:40801 LF.Tactics <> tail_length thm
def 40875:40904 <> manual_grade_for_split_combine
R40908:40913 Coq.Init.Datatypes <> option ind
R40919:40919 LF.Poly <> ::type_scope:x_'*'_x not
R40916:40918 Coq.Init.Datatypes <> nat ind
R40920:40925 Coq.Strings.String <> string ind
R40931:40934 Coq.Init.Datatypes <> None constr
prf 41114:41128 <> filter_exercise
R41159:41162 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41163:41166 LF.Basics <> bool ind
R41158:41158 LF.Tactics <> X var
R41203:41203 LF.Tactics <> X var
R41214:41217 LF.Poly <> list ind
R41219:41219 LF.Tactics <> X var
R41251:41259 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41266:41268 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41260:41263 LF.Tactics <> test var
R41265:41265 LF.Tactics <> x var
R41269:41272 LF.Basics <> true constr
R41241:41243 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41228:41233 LF.Poly <> filter def
R41240:41240 LF.Tactics <> l var
R41235:41238 LF.Tactics <> test var
R41245:41248 LF.Poly <> :::x_'::'_x not
R41244:41244 LF.Tactics <> x var
R41249:41250 LF.Tactics <> lf var
def 42454:42460 <> forallb
R42482:42485 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42486:42489 LF.Basics <> bool ind
R42481:42481 LF.Tactics <> X var
R42497:42500 LF.Poly <> list ind
R42502:42502 LF.Tactics <> X var
R42507:42510 LF.Basics <> bool ind
R42517:42520 LF.Poly <> fold def
R42553:42556 LF.Basics <> true constr
R42551:42551 LF.Tactics <> l var
R42539:42542 LF.Basics <> :::x_'&&'_x not
R42536:42538 LF.Tactics <> res var
R42543:42546 LF.Tactics <> test var
R42548:42548 LF.Tactics <> x var
def 42568:42581 <> test_forallb_1
R42609:42611 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42585:42591 LF.Tactics <> forallb def
R42598:42598 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42600:42600 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42602:42602 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42604:42604 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42606:42606 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42608:42608 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42593:42596 LF.Basics <> oddb def
R42612:42615 LF.Basics <> true constr
def 42652:42665 <> test_forallb_2
R42695:42697 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42669:42675 LF.Tactics <> forallb def
R42682:42682 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42688:42688 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42694:42694 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42683:42687 LF.Basics <> false constr
R42689:42693 LF.Basics <> false constr
R42677:42680 LF.Basics <> negb def
R42698:42701 LF.Basics <> true constr
def 42738:42751 <> test_forallb_3
R42778:42780 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42755:42761 LF.Tactics <> forallb def
R42769:42769 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42771:42771 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42773:42773 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42775:42775 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42777:42777 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42763:42767 LF.Basics <> evenb def
R42781:42785 LF.Basics <> false constr
def 42822:42835 <> test_forallb_4
R42857:42859 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42839:42845 LF.Tactics <> forallb def
R42855:42856 LF.Poly <> :::'['_']' not
R42848:42850 LF.Basics <> eqb def
R42860:42863 LF.Basics <> true constr
def 42901:42907 <> existsb
R42929:42932 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42933:42936 LF.Basics <> bool ind
R42928:42928 LF.Tactics <> X var
R42944:42947 LF.Poly <> list ind
R42949:42949 LF.Tactics <> X var
R42954:42957 LF.Basics <> bool ind
R42964:42967 LF.Poly <> fold def
R43000:43004 LF.Basics <> false constr
R42998:42998 LF.Tactics <> l var
R42986:42989 LF.Basics <> :::x_'||'_x not
R42983:42985 LF.Tactics <> res var
R42990:42993 LF.Tactics <> test var
R42995:42995 LF.Tactics <> x var
def 43016:43029 <> test_existsb_1
R43058:43060 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43033:43039 LF.Tactics <> existsb def
R43049:43049 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43051:43051 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43053:43053 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43055:43055 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43057:43057 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43042:43044 LF.Basics <> eqb def
R43061:43065 LF.Basics <> false constr
def 43102:43115 <> test_existsb_2
R43156:43158 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43119:43125 LF.Tactics <> existsb def
R43139:43139 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43144:43144 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43149:43149 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43155:43155 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43140:43143 LF.Basics <> true constr
R43145:43148 LF.Basics <> true constr
R43150:43154 LF.Basics <> false constr
R43128:43131 LF.Basics <> andb def
R43133:43136 LF.Basics <> true constr
R43159:43162 LF.Basics <> true constr
def 43199:43212 <> test_existsb_3
R43242:43244 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43216:43222 LF.Tactics <> existsb def
R43229:43229 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43231:43231 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43233:43233 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43235:43235 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43237:43237 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43239:43239 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43241:43241 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43224:43227 LF.Basics <> oddb def
R43245:43248 LF.Basics <> true constr
def 43285:43298 <> test_existsb_4
R43318:43320 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43302:43308 LF.Tactics <> existsb def
R43316:43317 LF.Poly <> :::'['_']' not
R43310:43314 LF.Basics <> evenb def
R43321:43325 LF.Basics <> false constr
def 43365:43372 <> existsb'
R43394:43397 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43398:43401 LF.Basics <> bool ind
R43393:43393 LF.Tactics <> X var
R43409:43412 LF.Poly <> list ind
R43414:43414 LF.Tactics <> X var
R43419:43422 LF.Basics <> bool ind
R43429:43432 LF.Basics <> negb def
R43435:43441 LF.Tactics <> forallb def
R43468:43468 LF.Tactics <> l var
R43453:43456 LF.Basics <> negb def
R43459:43462 LF.Tactics <> test var
R43464:43464 LF.Tactics <> x var
prf 43481:43496 <> existsb_existsb'
R43527:43530 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43531:43534 LF.Basics <> bool ind
R43526:43526 LF.Tactics <> X var
R43542:43545 LF.Poly <> list ind
R43547:43547 LF.Tactics <> X var
R43567:43569 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43553:43559 LF.Tactics <> existsb def
R43566:43566 LF.Tactics <> l var
R43561:43564 LF.Tactics <> test var
R43570:43577 LF.Tactics <> existsb' def
R43584:43584 LF.Tactics <> l var
R43579:43582 LF.Tactics <> test var
R43664:43671 LF.Tactics <> existsb' def
R43746:43748 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43738:43741 LF.Basics <> :::x_'||'_x not
R43737:43737 LF.Tactics <> b var
R43742:43745 LF.Basics <> true constr
R43749:43752 LF.Basics <> true constr
R43746:43748 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43738:43741 LF.Basics <> :::x_'||'_x not
R43737:43737 LF.Tactics <> b var
R43742:43745 LF.Basics <> true constr
R43749:43752 LF.Basics <> true constr
R43854:43856 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43845:43848 LF.Basics <> :::x_'&&'_x not
R43844:43844 LF.Tactics <> b var
R43849:43853 LF.Basics <> false constr
R43857:43861 LF.Basics <> false constr
R43854:43856 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43845:43848 LF.Basics <> :::x_'&&'_x not
R43844:43844 LF.Tactics <> b var
R43849:43853 LF.Basics <> false constr
R43857:43861 LF.Basics <> false constr
R43981:43983 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43972:43975 LF.Basics <> :::x_'||'_x not
R43971:43971 LF.Tactics <> b var
R43976:43980 LF.Basics <> false constr
R43984:43984 LF.Tactics <> b var
R43981:43983 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43972:43975 LF.Basics <> :::x_'||'_x not
R43971:43971 LF.Tactics <> b var
R43976:43980 LF.Basics <> false constr
R43984:43984 LF.Tactics <> b var
R44085:44087 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44077:44080 LF.Basics <> :::x_'&&'_x not
R44076:44076 LF.Tactics <> b var
R44081:44084 LF.Basics <> true constr
R44088:44088 LF.Tactics <> b var
R44085:44087 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44077:44080 LF.Basics <> :::x_'&&'_x not
R44076:44076 LF.Tactics <> b var
R44081:44084 LF.Basics <> true constr
R44088:44088 LF.Tactics <> b var
R44166:44173 LF.Tactics <> existsb' def
R44197:44203 LF.Tactics <> forallb def
R44219:44222 LF.Basics <> negb def
R44230:44230 LF.Tactics <> x var
R44244:44247 LF.Poly <> fold def
R44303:44306 LF.Basics <> true constr
R44269:44272 LF.Basics <> bool ind
R44281:44284 LF.Basics <> :::x_'&&'_x not
R44278:44280 LF.Tactics <> res var
R44285:44288 LF.Basics <> negb def
R44296:44296 LF.Tactics <> x var
R44197:44203 LF.Tactics <> forallb def
R44219:44222 LF.Basics <> negb def
R44230:44230 LF.Tactics <> x var
R44244:44247 LF.Poly <> fold def
R44303:44306 LF.Basics <> true constr
R44269:44272 LF.Basics <> bool ind
R44281:44284 LF.Basics <> :::x_'&&'_x not
R44278:44280 LF.Tactics <> res var
R44285:44288 LF.Basics <> negb def
R44296:44296 LF.Tactics <> x var
